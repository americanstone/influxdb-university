{
 "meta": {
  "version": "1",
  "type": "dashboard",
  "name": "Anomaly detection-Template",
  "description": "template created from dashboard: Anomaly detection"
 },
 "content": {
  "data": {
   "type": "dashboard",
   "attributes": {
    "name": "Anomaly detection",
    "description": ""
   },
   "relationships": {
    "label": {
     "data": []
    },
    "cell": {
     "data": [
      {
       "type": "cell",
       "id": "059dac0d4c05d000"
      },
      {
       "type": "cell",
       "id": "059dac0d4e5bc000"
      }
     ]
    },
    "variable": {
     "data": []
    }
   }
  },
  "included": [
   {
    "id": "059dac0d4c05d000",
    "type": "cell",
    "attributes": {
     "x": 0,
     "y": 0,
     "w": 12,
     "h": 4
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "059dac0d4c05d000"
      }
     }
    }
   },
   {
    "id": "059dac0d4e5bc000",
    "type": "cell",
    "attributes": {
     "x": 0,
     "y": 4,
     "w": 12,
     "h": 2
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "059dac0d4e5bc000"
      }
     }
    }
   },
   {
    "type": "view",
    "id": "059dac0d4c05d000",
    "attributes": {
     "name": "Temperature and humidity of S1 and S2",
     "properties": {
      "shape": "chronograf-v2",
      "queries": [
       {
        "text": "from(bucket: \"training\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> drop(columns: [\"_start\", \"_stop\", \"host\",\"_measurement\"])",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [],
         "aggregateWindow": {
          "period": "auto"
         }
        }
       }
      ],
      "axes": {
       "x": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       },
       "y": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       }
      },
      "type": "xy",
      "legend": {},
      "geom": "line",
      "colors": [
       {
        "id": "141fbe76-b832-4fdb-8523-5ce35cf8a2a8",
        "type": "scale",
        "hex": "#31C0F6",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "a8f21a39-a72d-48c7-a1f4-ecf45c80e69e",
        "type": "scale",
        "hex": "#A500A5",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "1aa884fc-6f00-4b52-9696-326b67d36f6b",
        "type": "scale",
        "hex": "#FF7E27",
        "name": "Nineteen Eighty Four",
        "value": 0
       }
      ],
      "note": "",
      "showNoteWhenEmpty": false,
      "xColumn": "_time",
      "yColumn": "_value",
      "shadeBelow": false,
      "position": "overlaid",
      "timeFormat": ""
     }
    }
   },
   {
    "type": "view",
    "id": "059dac0d4e5bc000",
    "attributes": {
     "name": "Anomalies",
     "properties": {
      "shape": "chronograf-v2",
      "queries": [
       {
        "text": "import \"date\"\nimport \"math\"\n\nmovingAvg = from(bucket: \"training\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\n  |> filter(fn: (r) => r._stop != r._time)\n  |> drop(columns: [\"_start\", \"_stop\", \"_measurement\"])\n  |> rename(columns: {_value: \"avg\"})\n  \nmovingStddev = from(bucket: \"training\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> aggregateWindow(every: 5m, fn: stddev, createEmpty: false)\n  |> filter(fn: (r) => r._stop != r._time)\n  |> drop(columns: [\"_start\", \"_stop\", \"_measurement\"])\n  |> rename(columns: {_value: \"stddev\"})\n//  |> filter(fn: (r) => not(math.isNaN(f: r.stddev)))\n  \nallData = from(bucket: \"training\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> drop(columns: [\"_start\", \"_stop\", \"_measurement\"])\n\njoin1 = join(tables: {all: movingAvg, avg: movingStddev}, on: [\"_time\",\"sensor\",\"_field\"], method: \"inner\")\n\njoin2 = join(tables: {all: allData, j: join1}, on: [\"sensor\",\"_field\"], method: \"inner\")\n  |> filter(fn: (r) =>   uint(v: r._time_all) - uint(v: r._time_j) > 0 )\n  |> filter(fn: (r) =>   uint(v: r._time_all) - uint(v: r._time_j) <= (5*60*1000000000))\n//  |> map(fn: (r) => ({ r with _value: math.abs(x: (r._value - r.avg)/r.stddev)}))\n//  |> map(fn: (r) => ({ r with _value: (r._value - r.avg)/r.stddev}))\n  |> map(fn: (r) => ({ r with _value: if  math.abs(x: (r._value - r.avg)/r.stddev)>4 then 1 else 0}))\n  |> group(columns: [\"sensor\", \"_field\"], mode:\"by\")\n//  |> filter(fn: (r) => r._value > 0)\n\njoin2",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [],
         "aggregateWindow": {
          "period": "auto"
         }
        }
       }
      ],
      "axes": {
       "x": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       },
       "y": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "2",
        "scale": "linear"
       }
      },
      "type": "xy",
      "legend": {},
      "geom": "line",
      "colors": [
       {
        "id": "141fbe76-b832-4fdb-8523-5ce35cf8a2a8",
        "type": "scale",
        "hex": "#31C0F6",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "a8f21a39-a72d-48c7-a1f4-ecf45c80e69e",
        "type": "scale",
        "hex": "#A500A5",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "1aa884fc-6f00-4b52-9696-326b67d36f6b",
        "type": "scale",
        "hex": "#FF7E27",
        "name": "Nineteen Eighty Four",
        "value": 0
       }
      ],
      "note": "",
      "showNoteWhenEmpty": false,
      "xColumn": "_time_all",
      "yColumn": "_value",
      "shadeBelow": false,
      "position": "overlaid",
      "timeFormat": ""
     }
    }
   }
  ]
 },
 "labels": []
}