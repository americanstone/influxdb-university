CREATE TABLE public.oven
(
    pid bigint NOT NULL,
    kind character varying COLLATE pg_catalog."default" NOT NULL,
    enteringtime bigint NOT NULL,
    exitingtime bigint,
    sensor character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT hoven_pkey PRIMARY KEY (pid,enteringtime,sensor)
);

INSERT INTO oven (pid,kind,enteringtime,exitingtime,sensor) VALUES(2,'napoli',1595332800000000000,1595332950000000000,'S1');
INSERT INTO oven (pid,kind,enteringtime,exitingtime,sensor) VALUES(1,'margherita',1595332810000000000,1595332880000000000,'S2');
INSERT INTO oven (pid,kind,enteringtime,exitingtime,sensor) VALUES(3,'pepperoni',1595332970000000000,1595333050000000000,'S1');
INSERT INTO oven (pid,kind,enteringtime,exitingtime,sensor) VALUES(2,'napoli',1595332930000000000,1595333084000000000,'S2');

import "sql"

pizzas = sql.from(
  driverName: "postgres",
  dataSourceName: "postgresql://postgres:quantia-allianz@52.30.211.196:5432/pizza-erp?sslmode=disable",
  query:"SELECT * 
         FROM oven 
         WHERE enteringtime/1000000000 >= extract(epoch from timestamp '2020-07-21T12:00:00') and
              enteringtime/1000000000 < extract(epoch from timestamp '2020-07-21T12:50:00')
        "
) 

obs = from(bucket: "training")
  |> range(start: 2020-07-21T12:00:00Z, stop: 2020-07-21T12:05:00Z)
  |> filter(fn: (r) => r._measurement == "iot-oven")
  |> filter(fn: (r) => r._field == "temperature")
  |> drop(columns: ["_measurement", "_start", "_stop"])

join(tables: {p: pizzas, o: obs}, on: ["sensor" ], method: "inner")
  |> filter(fn: (r) => uint(v: r._time) >= r.enteringtime and uint(v: r._time) < r.exitingtime)
  |> group(columns: ["pid", "kind"], mode:"by")